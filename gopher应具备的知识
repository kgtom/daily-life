reference：https://www.zhihu.com/question/67846139?utm_source=wechat_session&utm_medium=social
具备的知识分类：
1.通用问题
2.开放式问题
3.设计模式
4.代码相关
5.语言相关
6.web相关
7.数据库相关
8.并发问题
9.分布式问题
10.软件生命周期和团队管理
11.逻辑和算法
12.软件架构（SOA、微服务）
13.安全相关问题

第一通用问题：
1.面向对象编程 vs 函数式编程区别？
  OOP:以对象为中心；函数式对象，用于逻辑处理，符合人认知方式和思考方式：函数是第一公民；语法简洁，多用于数据处理
2.微软、谷歌、欧朋(opera)和火狐这类公司是如何从他们的浏览器中获利的？
浏览器是一个流量入口为网站/搜索引擎；广告；推送服务；推荐软件安装
3.语言设计中空引用(null reference)的存在有什么问题？假设你想要将空引用的概念从你的首选语言中移除，可能导致什么结果？
 比如c#语言，导致未将对象引用为对象实例，Golang:初始化默认的值；如果移除，默认值是一个需要考虑的问题
4.为什么打开TCP套接字有很大的开销？
三次握手，四次挥手；每次一个客户端连接，都要fork一个进程
5. 封装的重要性体现在哪儿？
 在面向对象编程中，对内部成员变量、函数一种信息隐藏，“高内聚”体现，于其它模块隔离；在编写函数、方法、API是，封装利于可复用性
6.什么是实时系统？它与普通系统有什么区别？
 实时操作系统：对外部请求及时响应，响应时间是最重要的指标，例如 vsWorks, 军工、航天工业上应用、汽车安全气囊、导弹发射器，
 非实时操作系统：目前用的Linux Windows 
7.实时语言和堆内存分配之间的关系是什么？




