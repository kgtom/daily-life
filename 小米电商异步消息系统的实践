Notify消息系统的设计需要解决以下几个问题：

1.如何接收消息；

2.如何存储消息；

3.如何投递消息；

4. 对消息的统计与监控。

我们采用接口的方式来接收业务系统的消息，采用MySQL来存储消息，在消息发送时使用Redis队列来存储。

为了实现以上主要功能，为Notify系统设计了以下的数据结构。下面为五个最主要的数据表，以及重要的字段：

1.biz - 业务（生产者）；

2.receive - 接收者（消费者）；

3.biz_receive - 订阅关系； 
状态字段，表示订阅关系的运行状态，分为正常、暂停（接收消息，但不发送）、废弃（不接收消息）三种。 接口地址字段。

4.biz_msg - 业务消息； 消息体字段。

5.receive_msg - 投递消息； 发送状态字段，分为四种状态，待处理、待投递、已投递、丢弃。 发送次数字段。

这里需要提一下Notify系统的消息分裂机制。考虑到有可能在一项业务执行过程中需要把消息发给多个接口，Notify消息在设计的时候引入了一个消息分裂的概念。

6.针对单一MySQL实例问题，我们引入了MyCAT，MyCAT是阿里开发并维护的一款开源数据库中间件，实现了MySQL的分布式存储，提升了数据库性能，并且MySQL实例数量动态可扩展，最重要的是MyCAT可运行MySQL语句，因此与MySQL几乎无缝切换，开发成本小。

reference:
https://mp.weixin.qq.com/s/_-rEZHEjR_m68SB5cD3KgA
